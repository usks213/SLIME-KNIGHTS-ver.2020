//==================================================================
//									bg.cpp
//	GM21 背景
//
//==================================================================
//	author :	AT12A 05 宇佐美晃之
//==================================================================
//	開発履歴
//
//	2020/06/05	背景描画
//	2020/06/17	オブジェクト指向に
//
//===================================================================


//====== インクルード部 ======
#include "bg.h"
#include "../sprite.h"
#include "../texture.h"
#include "camera.h"
#include "objectMgr.h"


//===== マクロ定義 =====


//===== プロトタイプ宣言 =====


//===== グローバル変数 =====


//===== 静的メンバ =====
CTexture CBG::sm_texture[BG::MAX_BG_TYPE];



//========================================
//
//	コンストラクタ
//
//========================================
CBG::CBG()
{
	// ポリゴンのパラメータの初期化
	m_transform;
	m_transform.SetSize(Float2{ SCREEN_WIDTH, SCREEN_HEIGHT });

	// スプライトデータ
	m_sprite;

	// レイヤー
	m_enLayer = LAYER::BG;

	m_pTexture = nullptr;
}


//========================================
//
//	デストラクタ
//
//========================================
CBG::~CBG()
{

}


//========================================
//
//	初期化
//
//========================================
void CBG::Init()
{
	// テクスチャのロード
	sm_texture[BG::TITLE].LoadTexture(FILE_PATH"title.tga");
	sm_texture[BG::BOSS_MOVIE].LoadTexture(FILE_PATH"ui/movie.tga");

}


//========================================
//
//	終了処理
//
//========================================
void CBG::Uninit()
{
	// テクスチャの解放
	for (int i = 0; i < BG::MAX_BG_TYPE; i++)
	{
		sm_texture[i].UnloadTexture();
	}
}


//========================================
//
//	更新
//
//========================================
void CBG::Update()
{


}


//========================================
//
//	描画
//
//========================================
void CBG::Draw()
{
	m_sprite.Draw(&m_transform, m_pTexture, false);

}


//========================================
//
//	生成
//
//========================================
CBG* CBG::Create(BG::EBG_TYPE eType, Float3 pos)
{
	CBG* pBg = CObjectManager::CreateObject<CBG>(pos);

	pBg->m_pTexture = &sm_texture[eType];

	return pBg;
}


//========================================
//
//	破棄
//
//========================================
void CBG::Destroy()
{
	CObjectManager::DestroyObject(this);
}

