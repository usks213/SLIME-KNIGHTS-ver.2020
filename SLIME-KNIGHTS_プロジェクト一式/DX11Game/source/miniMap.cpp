//==================================================================
//								miniMap.h
//	ミニマップ用ブロック
//
//==================================================================
//	author :	AT12A 05 宇佐美晃之
//==================================================================
//	開発履歴
//	
//	2020/09/04	ミニマップクラスの作成
//
//===================================================================


//====== インクルード部 ======
#include "miniMap.h"
#include "objectMgr.h"

#include "../texture.h"

//===== マクロ定義 =====

//===== 静的メンバ =====


//===== 名前空間 =====


//========================================
//
//	コンストラクタ
//
//========================================
CMiniMap::CMiniMap()
{
	// ポリゴンのパラメータの初期化
	m_transform.SetSize(Float2{96, 96});
	
	// スプライトデータ
	m_sprite;

	// レイヤー
	m_enLayer = LAYER::UI;

}


//========================================
//
//	デストラクタ
//
//========================================
CMiniMap::~CMiniMap()
{
}


//========================================
//
//	初期化
//
//========================================
void CMiniMap::Init()
{

}

//========================================
//
//	終了処理
//
//========================================
void CMiniMap::Uninit()
{

}

//========================================
//
//	更新処理
//
//========================================
void CMiniMap::Update()
{
	
}

//========================================
//
//	描画処理
//
//========================================
void CMiniMap::Draw()
{
	m_sprite.Draw(&m_transform, m_pTexture, false);
}


//========================================
//
//	生成
//
//========================================
CMiniMap* CMiniMap::Create(Float3 pos, CTexture* nTex, int nTexPos, int nSplitX, int nSplitY)
{
	CMiniMap *pBlock = CObjectManager::CreateObject<CMiniMap>(pos);

	// テクスチャ
	pBlock->m_pTexture = nTex;

	// テクスチャサイズ
	pBlock->m_sprite.SetTexSize(Float2{ 1.0f / nSplitX, 1.0f / nSplitY });

	// テクスチャ座標
	pBlock->m_sprite.SetTexPos(Float2{ nTexPos % nSplitX * pBlock->m_sprite.GetTexSize().x,
										nTexPos / nSplitX * pBlock->m_sprite.GetTexSize().y });

	return pBlock;
}

//========================================
//
//	消去
//
//========================================
void CMiniMap::Destroy()
{
	CObjectManager::DestroyObject(this);

}